@model NewBrainfieldNetCore.Viewmodels.StartExamViewModel
@{
    Layout = null;
    int i = 1;
}

<!DOCTYPE html>
<html>
<head>
    <title>Assesment Examination Center</title>
    <!-- HTML5 Shim and Respond.js IE9 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
            <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
            <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
        <![endif]-->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <!-- Required Framework-->
    <link href="~/V2.0Layout/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" type="text/css" href="~/V2.0Layout/css/jquery-ui.min.css" />
    <!-- Style.css-->
    <link rel="stylesheet" type="text/css" href="~/V2.0Layout/css/style.css" />
    <!-- Timer  -->
    <link href="~/Timer/timeTo.css" rel="stylesheet" />
    <!-- End Timer  -->

    <style>
        .LockOn {
            display: block;
            visibility: visible;
            position: absolute;
            z-index: 999;
            top: 0px;
            left: 0px;
            width: 100%;
            height: 100%;
            background-color: gray;
            vertical-align: bottom;
            padding-top: 20%;
            filter: alpha(opacity=75);
            opacity: 0.75;
            font-size: large;
            color: blue;
            font-style: italic;
            font-weight: 400;
            background-image: url('../../wwwroot/assets/467.gif');
            background-repeat: no-repeat;
            background-attachment: fixed;
            background-position: center;
        }
    </style>

</head>
<body>
    <input type="hidden" id="UserId" value="@Model.UserID" />
    <input type="hidden" id="ExamId" value="@Model.ExamID" />
    <div id="coverScreen" class="LockOn">
    </div>
    <div class="header">
        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    <div class="logo">
                        <a href="">Test</a>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="right-panel">
                        <div class="que-type">
                            <div class="user-detail">
                                <div>
                                    <p>Candidate Name : <span>@Model.CandidateName</span></p>
                                    <p>Exam Name : <span>@Model.ExamName</span></p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="wrapper">
        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    <div class="subject">
                        @foreach (var r in Model.SubjectMasters)
                        {
                            //{ i = i + r.Item1; }

                            if (r.Item1 == 0)
                            {
                                <a href="#" onclick="showque(1)" class="btn btn-primary btn-lg">@r.Item2.ToString()</a>
                            }
                            else
                            {
                                { i = r.Item1 + 1; }
                                <a href="#" onclick="showque(@i)" class="btn btn-primary btn-lg">@r.Item2.ToString()</a>
                                //<a href="#" onclick="showque(10)" class="btn btn-primary btn-lg">@r.Item2.ToString()</a>
                            }

                        }
                    </div>
                    <!-- <span class="qt pull-left">Question Type : SA</span> -->
                </div>
                <div class="col-md-6">
                    <div id="countdown-11" style="float:right;"></div>
                    <span class="time pull-right"><b>Time: </b></span>
                </div>
            </div>
        </div>
    </div>
    <div class="container">
        <div class="row">
            <div class="col-md-9 pset-left">
                <div class="que-box">
                    <div class="que-header">
                        <b id="questionNumber"><span class="questionNumber">Question :</span> 1</b>
                    </div>
                    <div class="que-details" id="quedetails">
                        <div class="question">
                            <span>Here goes question test and Control type</span>
                            <form>
                                <label class="radio-inline"><input type="radio" id="answer1" name="optradio" checked="">Option 1</label>
                                <label class="radio-inline"><input type="radio" name="optradio">Option 2</label>
                                <label class="radio-inline"><input type="radio" name="optradio">Option 3</label>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="action-btns">
                    <div class="pull-left">
                        <button class="btn btn-success" onclick="submitans()">Save & Next</button>
                        <button class="btn btn-warning" onclick="saveandreview()">Save & Mark For Review</button>
                        <button class="btn btn-primary" onclick="reviewnext()">Mark for Review & Next</button>
                        <button class="btn btn-default" onclick="clearres()">Clear Response</button>
                        <button class="btn btn-default" onclick="shownext()">Next</button>
                    </div>
                </div>
            </div>
            <div class="col-md-3 pset-right">
                <div class="right-box">
                    <div class="legend-box">
                        <div class="noti noti-left notivisited">
                            <span class="not_visited">9</span>
                            <span class="type">Not Visited</span>
                        </div>
                        <div class="noti notanswer">
                            <span class="not_answered">1</span>
                            <span class="type">Not Answered</span>
                        </div>
                        <div class="clear"></div>
                        <div class="noti noti-left notianswer">
                            <span class="answered">0</span>
                            <span class="type">Answered</span>
                        </div>
                        <div class="noti notireview">
                            <span class="review">0</span>
                            <span class="type">Marked for Review</span>
                        </div>
                        <div class="clear"></div>
                        <div class="noti noti-full notimarked">
                            <span class="review_marked">0</span>
                            <span class="type">Answered & Marked for Review (will be considered for evaluation)</span>
                        </div>
                        <div class="clear"></div>
                    </div>
                    <div class="ch-ques">
                        <div id="qtd0">
                            <span class="not_answered">1</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">2</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">3</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">4</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">5</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">6</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">7</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">8</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">9</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">10</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">11</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">12</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">13</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">14</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">15</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">16</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">17</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">18</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">19</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">20</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">21</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">22</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">23</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">24</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">25</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">26</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">27</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">28</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">29</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">30</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">31</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">32</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">33</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">34</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">35</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">36</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">37</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">38</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">39</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">40</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">41</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">42</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">43</span>
                        </div>
                        <div id="qtd0">
                            <span class="not_visited">44</span>
                        </div>
                    </div>
                </div>

                <div class="action-btns text-center">
                    <button class="btn btn-success" id="submitexam">Submit</button>

                    @*<a href="#" class="btn btn-default" id="nextquestion" onclick="shownext()">Next</a>*@
                </div>
            </div>
        </div>
    </div>

    <!--Required JS -->
    <script src="~/V2.0Layout/js/jquery-2.2.4.min.js"></script>
    <script src="~/V2.0Layout/js/bootstrap.min.js"></script>
    <!--Custom JS-->
    <script src="~/V2.0Layout/js/custom.js"></script>
    <!-- Timer  -->
    <script src="~/Timer/jquery.time-to.js"></script>
    <!-- End Timer  -->
    <script>
        $(window).load(function () {
            $("#coverScreen").hide();

            @*$.ajax({
                url: '@Url.Action("GetExamTime", "Exams")',
                //url:'http://brainfieldindia.in/Exams/GetExamTime',
                type: "GET",
                async: false,
                data: {
                    id: $("#ExamId").val()
                },
                success: function (data) {
                    $("#coverScreen").hide();
                    var toSeconds = (parseInt(data) * 60);
                    $('#countdown-11').timeTo({
                        seconds: 180,
                        displayHours: true
                    }, function () {
                        CallSave();
                    });
                },
                Error: function (data) {
                    alert("Error");
                }
            });*@

            $('#countdown-11').timeTo({
                seconds: 1800,
                displayHours: true
            }, function () {
                CallSave();
            });

        });
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('.que-box').height($(window).height() - 167);
            $('.right-box').height($(window).height() - 80);
            $('.ch-ques').height($(window).height() - 300);
            GenerateQuestionDemo();
        })
        var QuestionStatus = {
            NotVisited: 0,
            NotAnswered: 1,
            AnsweredAndMarkedForReview: 2,
            MarkedForReview: 3,
            Answered: 4
        };
        var Question = function (number, questionText, answer, currentStatus, Controltype) {
            this.number = number;
            this.questionText = questionText;
            this.answer = answer;
            this.currentStatus = currentStatus;
            this.Controltype = Controltype;
            this.userAnswer = "";
        }
        var QuestionCollection = function () {
            this.questions = [];
            this.numberOfQuestions = 0;
            this.currentQuestionNo = -1;
        }
        $.extend(QuestionCollection.prototype, {
            AddQuestion: function (question) {
                this.questions[this.numberOfQuestions++] = question;
            },
            RemoveQuestion: function (questionNumber) {
                if (questions == null) {
                    return;
                }
                var questionsToRemove = $.map(this.questions, function (que) {
                    if (que.number == questionNumber) {
                        return que;
                    }
                });
                if (questionsToRemove == null || questionsToRemove.length <= 0) {
                    return;
                }
                this.questions = $.grep(this.questions, function (que) {
                    return que != questionsToRemove[0];
                })
                this.numberOfQuestions--;
            },
            SetCurrentQuestion: function (index) {
                if (index <= this.numberOfQuestions) {
                    this.currentQuestionNo = index - 1;
                }
                else if (this.numberOfQuestions > 0) {
                    this.currentQuestionNo = 0;
                }
                var question = this.questions[this.currentQuestionNo];
                $('#questionNumber').html("<span class=\"questionNumber\">Question No</span>." + index);
                $('#quedetails').html(question.questionText + question.Controltype);
                if (question.userAnswer != null && question.userAnswer != "") {
                    $('input[name="optradio"][value="' + question.userAnswer + '"]').prop('checked', true);
                }

            },
            GetQuestion: function (index) {
                if (index <= this.numberOfQuestions) {
                    return this.questions[index - 1];
                }
                else {
                    return null;
                }
            },
            GetCurrentQuestion: function () {
                if (this.numberOfQuestions >= 0) {
                    return this.questions[this.currentQuestionNo];
                }
                else {
                    return null;
                }
            }
        });
        var Maxnum = 0;
        var questionCollection;
        function GenerateQuestionDemo() {
            questionCollection = new QuestionCollection();
            var data = @NewBrainfieldNetCore.Viewmodels.JavaScriptConvert.SerializeObject(Model._Results);
            for (var i = 0; i < data.length; i++) {
                var question = new Question(data[i].questionId, data[i].question, data[i].correctAnswer, QuestionStatus.NotVisited, "<form><label class=\"radio-inline\"><input type=\"radio\" name=\"optradio\" value=\"A\" >" + data[i].optionA + "</label> </br> <label class=\"radio-inline\"><input type=\"radio\" name=\"optradio\" value=\"B\"> " + data[i].optionB + "</label> </br> <label class=\"radio-inline\"><input type=\"radio\" name=\"optradio\" value=\"C\"> " + data[i].optionC + " </label> </br>  <label class=\"radio-inline\"><input type=\"radio\" name=\"optradio\" value=\"D\"> " + data[i].optionD + " </label> </form>");
                questionCollection.AddQuestion(question);
            }
            Maxnum = questionCollection.numberOfQuestions;
            questionCollection.SetCurrentQuestion(1);
            var questionNavigatorHtml = "";
            for (var i = 0; i < Maxnum; i++) {
                questionNavigatorHtml += "<div id=\"qtd" + (i + 1) + "\" onclick=\"showque(" + (i + 1) + ")\">" +
                "<span class=\"not_visited\">" + (i + 1) + "</span>" +
                "</div>";
            }
            $('.ch-ques').html(questionNavigatorHtml);
            $("#qtd1 span").removeClass();
            $("#qtd1 span").addClass("not_answered");
            CountType();
        }
        var quid = 1;
        function showque(queid) {
            if (queid > questionCollection.numberOfQuestions) {
                quid = queid = 1;
            }
            else {
                quid = queid;
            }

            questionCollection.SetCurrentQuestion(queid);
            var question = questionCollection.GetCurrentQuestion();
            if ($("#qtd" + queid + " span")[0].className == "not_visited") {
                $("#qtd" + queid + " span").removeClass();
                $("#qtd" + queid + " span").addClass("not_answered");
                question.currentStatus = QuestionStatus.NotAnswered;
            }
            CountType();
        }
        function clearres() {
            $("#qtd" + quid + " span").removeClass();
            $("#qtd" + quid + " span").addClass("not_answered");
            $("#answer" + quid).val("");
            $('input[name="optradio"]').prop('checked', false);
            var question = questionCollection.GetQuestion(quid);
            question.currentStatus = QuestionStatus.NotAnswered;
            question.userAnswer = null;
            CountType();
        }
        function reviewnext() {
            var question = questionCollection.GetCurrentQuestion();

            if ($("#qtd" + quid + " span")[0].className == "answered" || (question.userAnswer != null && question.userAnswer != "")) {
                $("#qtd" + quid + " span").removeClass();
                $("#qtd" + quid + " span").addClass("review_marked");
                question.currentStatus = QuestionStatus.AnsweredAndMarkedForReview;
            }
            else {
                $("#qtd" + quid + " span").removeClass();
                $("#qtd" + quid + " span").addClass("review");
                question.currentStatus = QuestionStatus.MarkedForReview;
            }
            showque((quid + 1));
            CountType();
        }

        function saveandreview() {
            var question = questionCollection.GetCurrentQuestion();

            if ($("#qtd" + quid + " span")[0].className == "answered" || (question.userAnswer != null && question.userAnswer != "")) {
                $("#qtd" + quid + " span").removeClass();
                $("#qtd" + quid + " span").addClass("review");
                question.currentStatus = QuestionStatus.AnsweredAndMarkedForReview;
            }
            else {
                $("#qtd" + quid + " span").removeClass();
                $("#qtd" + quid + " span").addClass("review_marked");
                question.currentStatus = QuestionStatus.MarkedForReview;
            }

	//newly added

		var answer = $('input[name="optradio"]:checked').val();
            if (answer) {
                question.userAnswer = answer;
                $("#qtd" + quid + " span").removeClass();
                //$("#qtd" + quid + " span").addClass("answered");
                $("#qtd" + quid + " span").addClass("review_marked");
                question.currentStatus = QuestionStatus.Answered;
            }

            showque((quid + 1));
            CountType();
        }

        function shownext() {
            showque((quid + 1));
        }

        function submitans() {
            var question = questionCollection.GetCurrentQuestion();
            var answer = $('input[name="optradio"]:checked').val();
            if (answer) {
                question.userAnswer = answer;
                $("#qtd" + quid + " span").removeClass();
                $("#qtd" + quid + " span").addClass("answered");
                question.currentStatus = QuestionStatus.Answered;
                showque((quid + 1));
            }
            else {
                showque((quid + 1));
                return;
            }
            CountType();
        }
        function CountType() {
            var numAnswer = $('.answered').length - 1;
            $(".notianswer .answered")[0].innerText = numAnswer;
            var notanswered = $('.not_answered').length - 1;
            $(".notanswer .not_answered")[0].innerText = notanswered;
            var notVisited = $('.not_visited').length - 1;
            $(".notivisited .not_visited")[0].innerText = notVisited;
            var review = $('.review').length - 1;
            $(".notireview .review")[0].innerText = review;
            var marked = $('.review_marked').length - 1;
            $(".notimarked .review_marked")[0].innerText = marked;
        }

        $("#submitexam").click(function () {
            CallSave();
        });

         function CallSave() {
            var exid = $("#ExamId").val();
            var uid = $("#UserId").val();
            $("#coverScreen").show();
            var dobj = questionCollection.questions;
            var i;
            var model = [];
            model.push(exid);
            model.push(uid);
            for (i = 0; i < dobj.length; i++) {
                var ac = dobj[i].userAnswer
                model.push(ac);
            }

             $.ajax({
                 url: '/ApplyExam/TakeExamValue/',
                 data:{
                     model: model
                 },
                 type: 'POST',
                 dataType: 'Text',
                 cache: false,
                 success: function (data) {
                     window.location.href = '@Url.Action("GenerateResult", "ApplyExam")';
                 },
                 error: function (data) {
                     $.cookie('answers', JSON.stringify(model), { expires: 1, path: '/' });
                     window.location.href = "../ExamFailure/ErrorPage";
                 }
             });

            @*$.ajax({
                dataType: "Text",
                async: true,
                type: "POST",
                tryCount: 0,
                retryLimit: 3,
                url: '@Url.Action("TakeExamValue", "ApplyExam")',
                data: str,
                contentType: "application/json",
                success: function (data) {
                    console.log(data);
                    //window.location.href = '@Url.Action("GenrateResult", "Exams")';
                },
                error: function (data) {
                    this.tryCount++;
                    if (this.tryCount <= this.retryLimit) {
                        var self = this;
                        var retry = function () {
                            $.ajax(self);
                        };
                        setTimeout(retry, 5000);
                        return;
                    }
                    else {
                        $.cookie('answers', JSON.stringify(model), { expires: 1, path: '/' });
                        window.location.href = "../ExamFailure/ErrorPage";
                    }
                }
            });*@
        }
    </script>
</body>
</html>